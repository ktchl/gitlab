variables:
  # The domain used for the live deploy_prodment
  KUBE_NAMESPACE_dev: dev
  KUBE_NAMESPACE_qa: qa
  KUBE_NAMESPACE_staging: staging
  KUBE_NAMESPACE_prod: prod
  IP_DEV: 3.252.40.31 
  IP_QA: 3.252.40.31
  IP_STAGING: 3.252.40.31 
  IP_PROD: 3.252.40.31 
  NODEPORT_DEV_GATEWAY: 30000
  NODEPORT_DEV_ORDERS: 30001
  NODEPORT_DEV_USERS: 30002
  NODEPORT_QA_GATEWAY: 30010
  NODEPORT_QA_ORDERS: 30011
  NODEPORT_QA_USERS: 30012
  NODEPORT_STAGING_GATEWAY: 30020
  NODEPORT_STAGING_ORDERS: 30021
  NODEPORT_STAGING_USERS: 30022
  NODEPORT_PROD_GATEWAY: 30030
  NODEPORT_PROD_ORDERS: 30031
  NODEPORT_PROD_USERS: 30032  

image:
  name: "python:3.11-alpine"
  entrypoint: ["/bin/sh", "-c"]

stages:
  - test
  - build 
  - push
  - deploy_dev
  - deploy_qa
  - deploy_staging
  - deploy_prod

test:
  stage: test
  image: python:latest
  before_script:
    # Show docker daemon info (optional, good for debugging)
    #- sudo apt install python3-pip -y
    #- sudo killall unattended-upgrades
    - sudo apt update && sudo apt install python3-pip -y
  script:
    - pip install -r gateway/requirements.txt
    - pip install -r orders/requirements.txt
    - pip install -r users/requirements.txt
    - pip install pytest
    - ls -l users/tests
    - PYTHONPATH=$(pwd) python3 users/tests/auth.py
    - PYTHONPATH=$(pwd) python3 users/tests/fake_db.py




build_gateway:
  stage: build
  script:
    # Build the container image
    - docker build -t "$DOCKERHUB_REPOSITORY:gateway" -f gateway/Dockerfile .
    # Tag the container image from latest to the commit ref
    - docker tag "$DOCKERHUB_REPOSITORY:gateway" "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-gateway"

build_orders:
  stage: build
  script:
    # Build the container image
    - docker build -t "$DOCKERHUB_REPOSITORY:orders" -f orders/Dockerfile .
    # Tag the container image from latest to the commit ref
    - docker tag "$DOCKERHUB_REPOSITORY:orders" "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-orders"

build_users:
  stage: build
  script:
    # Build the container images
    - docker build -t "$DOCKERHUB_REPOSITORY:users" -f users/Dockerfile .
    # Tag the container image from latest to the commit ref
    - docker tag "$DOCKERHUB_REPOSITORY:users" "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-users"

#run:
  #stage: run
  #script:
    # Build the container image
    #- docker run -d -p 80:80 --name fastapi "$DOCKERHUB_REPOSITORY:latest"
    #- sleep 10
    #- curl localhost
    #- docker stop fastapi
    #- docker rm fastapi

push_gateway:
  stage: push
  before_script:
    - docker info
    # Login to the Gitlab Container registry
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
  script:
    # Push the container image
    - docker push "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-gateway"
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$DOCKERHUB_REPOSITORY:gateway"; fi

push_orders:
  stage: push
  before_script:
    - docker info
    # Login to the Gitlab Container registry
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
  script:
    # Push the container image
    - docker push "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-orders"
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$DOCKERHUB_REPOSITORY:orders"; fi

push_users:
  stage: push
  before_script:
    - docker info
    # Login to the Gitlab Container registry
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
  script:
    # Push the container image
    - docker push "$DOCKERHUB_REPOSITORY:$CI_COMMIT_SHORT_SHA-users"
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$DOCKERHUB_REPOSITORY:users"; fi

stop_gateway_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: dev-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appgatewaydev -n $NAMESPACE

stop_orders_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: dev-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appordersdev -n $NAMESPACE

stop_users_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: dev-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appusersdev -n $NAMESPACE

stop_orders_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: dev-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appordersdev -n $NAMESPACE

stop_gateway_qa:
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: qa-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appgatewayqa -n $NAMESPACE

stop_users_qa:
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: qa-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appusersqa -n $NAMESPACE

stop_orders_qa:
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: qa-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appordersqa -n $NAMESPACE

stop_gateway_staging:
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: staging-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appgatewaystaging -n $NAMESPACE

stop_users_staging:
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: staging-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appusersstaging -n $NAMESPACE

stop_orders_staging:
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging
  when: manual
  # Don't stop the "review" for master branch or tags,
  # it is only for branches (so PRs (most of the time))
  environment:
    name: staging-$CI_BUILD_REF_NAME
    action: stop
  script:
    - sudo helm uninstall appordersstaging -n $NAMESPACE

deploy_dev_gateway:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: dev-$CI_BUILD_REF_NAME
    url: http://$IP_DEV:$NODEPORT_DEV_GATEWAY
    on_stop: stop_gateway_dev
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf .kube
    - mkdir .kube
    #- mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat "$KUBE_CONFIG"
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    - sudo helm upgrade --install appgatewaydev fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_DEV_GATEWAY"
    #- sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    #- sudo helm upgrade --install appusersdev helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_DEV_USERS"

deploy_dev_orders:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: dev-$CI_BUILD_REF_NAME
    url: http://$IP_DEV:$NODEPORT_DEV_ORDERS
    on_stop: stop_orders_dev
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf .kube
    - mkdir .kube
    #- mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat "$KUBE_CONFIG"
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewaydev fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_DEV_GATEWAY"
    - sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    #- sudo helm upgrade --install appusersdev helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_DEV_USERS"

deploy_dev_users:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: dev-$CI_BUILD_REF_NAME
    url: http://$IP_DEV:$NODEPORT_DEV_ORDERS
    on_stop: stop_users_dev
  stage: deploy_dev
  variables:
    NAMESPACE: $KUBE_NAMESPACE_dev

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf .kube
    - mkdir .kube
    #- mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat "$KUBE_CONFIG"
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewaydev fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_DEV_GATEWAY"
    #- sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    - sudo helm upgrade --install appusersdev helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_DEV_USERS"

deploy_qa_gateway:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: qa-$CI_BUILD_REF_NAME
    url: http://$IP_QA:$NODEPORT_QA_GATEWAY
    on_stop: stop_gateway_qa
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    - sudo helm upgrade --install appgatewayqa fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_QA_GATEWAY"
    #- sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    #- sudo helm upgrade --install appusersdev helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_DEV_USERS"

deploy_qa_orders:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: qa-$CI_BUILD_REF_NAME
    url: http://$IP_QA:$NODEPORT_QA_ORDERS
    on_stop: stop_orders_qa
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewayqa fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_QA_GATEWAY"
    - sudo helm upgrade --install appordersqa helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_QA_ORDERS"
    #- sudo helm upgrade --install appusersdev helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_DEV_USERS"

deploy_qa_users:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: qa-$CI_BUILD_REF_NAME
    url: http://$IP_QA:$NODEPORT_QA_USERS
    on_stop: stop_users_qa
  stage: deploy_qa
  variables:
    NAMESPACE: $KUBE_NAMESPACE_qa

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir -p ~/.kube/
    - ls
    - ls -a
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewayqa fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_QA_GATEWAY"
    #- sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    - sudo helm upgrade --install appusersqa helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_QA_USERS"

deploy_staging_gateway:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: staging-$CI_BUILD_REF_NAME
    url: http://$IP_STAGING:$NODEPORT_STAGING_GATEWAY
    on_stop: stop_gateway_staging
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    - sudo helm upgrade --install appgatewaystaging fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_STAGING_GATEWAY"
    #- sudo helm upgrade --install appordersdev helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_DEV_ORDERS"
    #- sudo helm upgrade --install appusersqa helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_QA_USERS"

deploy_staging_orders:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: staging-$CI_BUILD_REF_NAME
    url: http://$IP_STAGING:$NODEPORT_STAGING_ORDERS
    on_stop: stop_orders_staging
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewaystaging fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_STAGING_GATEWAY"
    - sudo helm upgrade --install appordersstaging helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_STAGING_ORDERS"
    #- sudo helm upgrade --install appusersqa helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_QA_USERS"

deploy_staging_users:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: staging-$CI_BUILD_REF_NAME
    url: http://$IP_STAGING:$NODEPORT_STAGING_USERS
    on_stop: stop_users_staging
  stage: deploy_staging
  variables:
    NAMESPACE: $KUBE_NAMESPACE_staging

  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewaystaging fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_STAGING_GATEWAY"
    #- sudo helm upgrade --install appordersstaging helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_STAGING_ORDERS"
    - sudo helm upgrade --install appusersstaging helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_STAGING_USERS"


deploy_prod_gateway:
  # Use the official docker image.
  image: docker:latest
  when: manual
  only:
    - main
  environment:
    name: prod
    url: http://$IP_PROD:$NODEPORT_PROD_GATEWAY
  stage: deploy_prod
  variables:
    NAMESPACE: prod
  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    - sudo helm upgrade --install appgatewayprod fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_PROD_GATEWAY"
    #- sudo helm upgrade --install appordersstaging helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_STAGING_ORDERS"
    #- sudo helm upgrade --install appusersstaging helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_STAGING_USERS"

deploy_prod_orders:
  # Use the official docker image.
  image: docker:latest
  when: manual
  only:
    - main
  environment:
    name: prod
    url: http://$IP_PROD:$NODEPORT_PROD_ORDERS
  stage: deploy_prod
  variables:
    NAMESPACE: prod
  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewayprod fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_PROD_GATEWAY"
    - sudo helm upgrade --install appordersprod helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_PROD_ORDERS"
    #- sudo helm upgrade --install appusersstaging helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_STAGING_USERS"

deploy_prod_users:
  # Use the official docker image.
  image: docker:latest
  when: manual
  only:
    - main
  environment:
    name: prod
    url: http://$IP_PROD:$NODEPORT_PROD_USERS
  stage: deploy_prod
  variables:
    NAMESPACE: prod
  services:
    - docker:dind
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - rm -Rf ~/.kube
    - mkdir ~/.kube/
    - ls
    - cat $KUBE_CONFIG > ~/.kube/config
    - kubectl config view --raw >~/.kube/config
    - cp fastapi/values.yaml values.yml
    - cat values.yml
    #- sudo helm upgrade --install appgatewayprod fastapi/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-gateway" --set service.nodeport="$NODEPORT_PROD_GATEWAY"
    #- sudo helm upgrade --install appordersprod helmorders/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-orders" --set service.nodeport="$NODEPORT_PROD_ORDERS"
    - sudo helm upgrade --install appusersprod helmusers/ --values=values.yml --namespace $NAMESPACE --set image.repository="$DOCKERHUB_REPOSITORY" --set image.tag="$CI_COMMIT_SHORT_SHA-users" --set service.nodeport="$NODEPORT_PROD_USERS"

